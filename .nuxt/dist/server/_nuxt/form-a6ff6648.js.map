{"version":3,"file":"form-a6ff6648.js","sources":["../../../../composables/useValidation.ts","../../../../validation/rules.ts","../../../../validation/schema.ts","../../../../utils/form.ts"],"sourcesContent":["import type { Ref } from 'vue'\n\nexport default function (submitCount: Ref<number>) {\n  const isSubmitted = computed<boolean>(() => submitCount.value > 0)\n\n  return {\n    isSubmitted,\n  }\n}\n","import { string, setLocale } from 'yup'\n\nexport default function () {\n  setLocale({\n    mixed: {\n      required: 'This is a required field',\n    },\n    string: {\n      email: 'This is not a valid email',\n      min: ({ min }) =>\n        `This field must be at least ${min} ${\n          min === 1 ? 'character' : 'characters'\n        }`,\n      max: ({ max }) => `This field must be at most ${max} ${'characters'}`,\n      url: 'Page url must be a valid URL',\n    },\n    array: {\n      min: ({ min }) =>\n        `This field must have at least ${min} ${min === 1 ? 'item' : 'items'}`,\n    },\n  })\n\n  const emailRule = string().required().email()\n  const lettersOnlyRule = string()\n    .required()\n    .matches(/^\\D*$/, 'The name should contain letters only')\n  const passwordRule = string()\n    .required()\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_-])(?=.{8,})/,\n      '8 characters or longer. Combine upper and lowercase letters, numbers and special characters (!@#$%^&*_-)'\n    )\n  const passwordRepeatRule = string()\n    .required()\n    .test('passwords-match', \"Passwords doesn't match\", function (value) {\n      return this.parent.newPassword === value\n    })\n\n  return {\n    emailRule,\n    lettersOnlyRule,\n    passwordRule,\n    passwordRepeatRule,\n  }\n}\n","import { object, string, array, number, boolean } from 'yup'\nimport type { Page } from 'types/audit'\nimport validationRules from 'validation/rules'\nimport { defaultViewports } from '~/data/screenSizes'\nconst { emailRule, passwordRule, passwordRepeatRule } = validationRules()\n\nexport const signInSchema = object({\n  email: emailRule,\n  password: passwordRule,\n})\n\nexport const signUpSchema = object({\n  email: emailRule,\n  newPassword: passwordRule,\n  passwordConfirm: passwordRepeatRule,\n})\n\nexport const recoverPasswordSchema = object({\n  email: emailRule,\n})\n\nexport const newPasswordSchema = object({\n  newPassword: passwordRule,\n  newPasswordRepeat: passwordRepeatRule,\n})\n\nexport const auditFormSchema = object({\n  noAxe: boolean().default(false),\n  pages: array().when('noAxe', ([noAxe]) => {\n    if (noAxe) {\n      return array()\n        .of(\n          object().shape({\n            url: string(),\n            selector: string(),\n          })\n        )\n        .default([\n          {\n            selector: '',\n            url: '',\n          },\n        ])\n    }\n    return array()\n      .of(\n        object()\n          .shape({\n            url: string().url().required(),\n            selector: string(),\n          })\n          .test('isUnique', `The entry is not unique`, function (currentPage) {\n            const pages = this.parent\n            const count = pages.filter(\n              (page: Page) =>\n                page.selector === currentPage.selector &&\n                page.url === currentPage.url\n            ).length\n            return count <= 1\n          })\n      )\n      .min(1)\n      .default([\n        {\n          selector: '',\n          url: '',\n        },\n      ])\n  }),\n  title: string().required(),\n  project: number().required(),\n  username: string(),\n  password: string(),\n  viewports: array(array(number().required()))\n    .required()\n    .min(1)\n    .default(defaultViewports),\n  description: string().when('noAxe', ([noAxe]) =>\n    noAxe ? string().required() : string()\n  ),\n})\n\nexport const accountFormSchema = object({\n  email: string().required(),\n  username: string().required(),\n  fullName: string().required(),\n  avatarUrl: string(),\n  userType: string(),\n})\n\nexport const addProfileToProjectFormSchema = object({\n  profile: string().required(),\n  project: number().required(),\n})\n\nexport const editUserTypeFormSchema = object({\n  user: string().required(),\n  userType: string().required(),\n})\n\nexport const createProjectFormSchema = object({\n  name: string().required(),\n  description: string(),\n})\n","import type { InvalidSubmissionContext } from 'vee-validate'\n\nexport function getFormData<T>(form: HTMLFormElement) {\n  return Array.from(new FormData(form)).reduce(\n    (obj, [k, v]) => ({ ...obj, [k]: v }),\n    {}\n  ) as T\n}\n\nconst displayFirstError = async (errors: Partial<InvalidSubmissionContext>) => {\n  if (Object.keys(errors).length) {\n    const firstError: HTMLElement | null = document.querySelector(\n      `[name=\"${Object.keys(errors)[0]}\"]`\n    )\n    await nextTick(() => {\n      firstError?.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center',\n      })\n\n      firstError?.focus({ preventScroll: true })\n    })\n  }\n}\n\nexport { displayFirstError }\n"],"names":["emailRule","passwordRule","passwordRepeatRule"],"mappings":";;;AAEA,SAAA,cAAyB,aAA0B;AACjD,QAAM,cAAc,SAAkB,MAAM,YAAY,QAAQ,CAAC;AAE1D,SAAA;AAAA,IACL;AAAA,EAAA;AAEJ;ACN2B,SAAA,kBAAA;AACf,YAAA;AAAA,IACR,OAAO;AAAA,MACL,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,OAAO;AAAA,MACP,KAAK,CAAC,EAAE,IAAI,MACV,+BAA+B,GAAG,IAChC,QAAQ,IAAI,cAAc,YAC5B;AAAA,MACF,KAAK,CAAC,EAAE,UAAU,8BAA8B,GAAG,IAAI,YAAY;AAAA,MACnE,KAAK;AAAA,IACP;AAAA,IACA,OAAO;AAAA,MACL,KAAK,CAAC,EAAE,IAAI,MACV,iCAAiC,GAAG,IAAI,QAAQ,IAAI,SAAS,OAAO;AAAA,IACxE;AAAA,EAAA,CACD;AAED,QAAMA,aAAY,OAAA,EAAS,WAAW,MAAM;AAC5C,QAAM,kBAAkB,SACrB,SACA,EAAA,QAAQ,SAAS,sCAAsC;AAC1D,QAAMC,gBAAe,SAClB,SACA,EAAA;AAAA,IACC;AAAA,IACA;AAAA,EAAA;AAEE,QAAAC,sBAAqB,SACxB,SAAA,EACA,KAAK,mBAAmB,2BAA2B,SAAU,OAAO;AAC5D,WAAA,KAAK,OAAO,gBAAgB;AAAA,EAAA,CACpC;AAEI,SAAA;AAAA,IACL,WAAAF;AAAA,IACA;AAAA,IACA,cAAAC;AAAA,IACA,oBAAAC;AAAA,EAAA;AAEJ;ACxCA,MAAM,EAAE,WAAW,cAAc,uBAAuB,gBAAgB;AAEjE,MAAM,eAAe,OAAO;AAAA,EACjC,OAAO;AAAA,EACP,UAAU;AACZ,CAAC;AAEM,MAAM,eAAe,OAAO;AAAA,EACjC,OAAO;AAAA,EACP,aAAa;AAAA,EACb,iBAAiB;AACnB,CAAC;AAEoC,OAAO;AAAA,EAC1C,OAAO;AACT,CAAC;AAEgC,OAAO;AAAA,EACtC,aAAa;AAAA,EACb,mBAAmB;AACrB,CAAC;AAEM,MAAM,kBAAkB,OAAO;AAAA,EACpC,OAAO,QAAA,EAAU,QAAQ,KAAK;AAAA,EAC9B,OAAO,QAAQ,KAAK,SAAS,CAAC,CAAC,KAAK,MAAM;AACxC,QAAI,OAAO;AACT,aAAO,MACJ,EAAA;AAAA,QACC,OAAA,EAAS,MAAM;AAAA,UACb,KAAK,OAAO;AAAA,UACZ,UAAU,OAAO;AAAA,QAAA,CAClB;AAAA,QAEF,QAAQ;AAAA,QACP;AAAA,UACE,UAAU;AAAA,UACV,KAAK;AAAA,QACP;AAAA,MAAA,CACD;AAAA,IACL;AACA,WAAO,MACJ,EAAA;AAAA,MACC,OAAA,EACG,MAAM;AAAA,QACL,KAAK,OAAA,EAAS,IAAA,EAAM,SAAS;AAAA,QAC7B,UAAU,OAAO;AAAA,MAAA,CAClB,EACA,KAAK,YAAY,2BAA2B,SAAU,aAAa;AAClE,cAAM,QAAQ,KAAK;AACnB,cAAM,QAAQ,MAAM;AAAA,UAClB,CAAC,SACC,KAAK,aAAa,YAAY,YAC9B,KAAK,QAAQ,YAAY;AAAA,QAC3B,EAAA;AACF,eAAO,SAAS;AAAA,MAAA,CACjB;AAAA,IAAA,EAEJ,IAAI,CAAC,EACL,QAAQ;AAAA,MACP;AAAA,QACE,UAAU;AAAA,QACV,KAAK;AAAA,MACP;AAAA,IAAA,CACD;AAAA,EAAA,CACJ;AAAA,EACD,OAAO,OAAO,EAAE,SAAS;AAAA,EACzB,SAAS,OAAO,EAAE,SAAS;AAAA,EAC3B,UAAU,OAAO;AAAA,EACjB,UAAU,OAAO;AAAA,EACjB,WAAW,MAAM,MAAM,OAAA,EAAS,SAAU,CAAA,CAAC,EACxC,SACA,EAAA,IAAI,CAAC,EACL,QAAQ,gBAAgB;AAAA,EAC3B,aAAa,SAAS;AAAA,IAAK;AAAA,IAAS,CAAC,CAAC,KAAK,MACzC,QAAQ,OAAO,EAAE,SAAS,IAAI,OAAO;AAAA,EACvC;AACF,CAAC;AAEM,MAAM,oBAAoB,OAAO;AAAA,EACtC,OAAO,OAAO,EAAE,SAAS;AAAA,EACzB,UAAU,OAAO,EAAE,SAAS;AAAA,EAC5B,UAAU,OAAO,EAAE,SAAS;AAAA,EAC5B,WAAW,OAAO;AAAA,EAClB,UAAU,OAAO;AACnB,CAAC;AAEM,MAAM,gCAAgC,OAAO;AAAA,EAClD,SAAS,OAAO,EAAE,SAAS;AAAA,EAC3B,SAAS,OAAO,EAAE,SAAS;AAC7B,CAAC;AAEM,MAAM,yBAAyB,OAAO;AAAA,EAC3C,MAAM,OAAO,EAAE,SAAS;AAAA,EACxB,UAAU,OAAO,EAAE,SAAS;AAC9B,CAAC;AAEM,MAAM,0BAA0B,OAAO;AAAA,EAC5C,MAAM,OAAO,EAAE,SAAS;AAAA,EACxB,aAAa,OAAO;AACtB,CAAC;AC9FK,MAAA,oBAAoB,OAAO,WAA8C;AAC7E,MAAI,OAAO,KAAK,MAAM,EAAE,QAAQ;AAC9B,UAAM,aAAiC,SAAS;AAAA,MAC9C,UAAU,OAAO,KAAK,MAAM,EAAE,CAAC,CAAC;AAAA,IAAA;AAElC,UAAM,SAAS,MAAM;AACnB,+CAAY,eAAe;AAAA,QACzB,UAAU;AAAA,QACV,OAAO;AAAA,MAAA;AAGT,+CAAY,MAAM,EAAE,eAAe,KAAM;AAAA,IAAA,CAC1C;AAAA,EACH;AACF;"}