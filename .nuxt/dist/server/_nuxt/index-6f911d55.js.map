{"version":3,"file":"index-6f911d55.js","sources":["../../../../data/auditStatuses.ts","../../../../components/AuditTable.vue","../../../../pages/audit/index.vue"],"sourcesContent":["export const statuses = ['draft', 'completed']\n","<script setup lang=\"ts\">\nimport type { TreeTableExpandedKeys } from 'primevue/treetable'\nimport { useConfirm } from 'primevue/useconfirm'\nimport type { Axe, ExtendedAudit, Project } from 'types/database'\nimport { hasTimeElapsedInMinutes } from 'utils/time'\nimport { statuses } from '~/data/auditStatuses'\n\nconst props = defineProps<{\n  audits: ExtendedAudit[]\n  projects: Project[]\n  projectId?: number\n  showUserAudits?: boolean\n}>()\n\nconst emit = defineEmits<{ (e: 'delete-audit', id: number): void }>()\n\nconst confirm = useConfirm()\nconst { user } = useUser()\nconst router = useRouter()\nconst isDialogVisible = ref(false)\nconst axeErrorMessage = ref('')\nconst dialogHeader = ref('')\n\nconst nodes = computed(() =>\n  props.audits.map((audit) => ({\n    data: {\n      ...audit,\n      project: audit.projects.name,\n      auditor: audit.profiles.username,\n    },\n  }))\n)\n\nconst projectFilterOptions = computed(() => {\n  const options = props.projects.map(({ name, id }) => ({\n    name,\n    value: name,\n    id,\n  }))\n\n  options.unshift({\n    name: 'All',\n    value: '',\n    id: 0,\n  })\n\n  return options\n})\n\nconst statusOptions = computed(() => {\n  const options = statuses.map((status) => ({\n    name: status,\n    value: status,\n  }))\n  options.unshift({\n    name: 'All',\n    value: '',\n  })\n\n  return options\n})\n\nconst allAuditorIds = computed(() =>\n  props.audits.map(({ profile_id: profileId }) => profileId)\n)\n\nconst uniqueAuditorFilterOptions = computed(() => {\n  const options = props.audits\n    .filter(\n      ({ profile_id: profileId }, index) =>\n        !allAuditorIds.value.includes(profileId, index + 1)\n    )\n    .map((audit) => ({\n      name: audit.profiles.username,\n      value: audit.profiles.username,\n      id: audit.profile_id,\n    }))\n\n  options.unshift({\n    name: 'All',\n    value: '',\n    id: '',\n  })\n\n  return options\n})\n\nconst selectedProject = ref(\n  projectFilterOptions.value.find(({ id }) => id === props?.projectId) ||\n    projectFilterOptions.value[0]\n)\nconst selectedAuditor = ref(\n  props.showUserAudits\n    ? uniqueAuditorFilterOptions.value.find(({ id }) => id === user.value.id)\n    : uniqueAuditorFilterOptions.value[0]\n)\nconst selectedStatus = ref(statusOptions.value[0])\n\nconst filters = computed<TreeTableExpandedKeys>(() => ({\n  global: '',\n  project: selectedProject.value.value,\n  auditor: selectedAuditor.value?.value,\n  status: selectedStatus.value.value,\n}))\n\nconst columns = [\n  { field: 'config.title', header: 'Title', sortable: true, start: true },\n  { field: 'project', header: 'Project', sortable: true, start: true },\n  {\n    field: 'auditor',\n    header: 'Auditor',\n    sortable: true,\n    start: props.showUserAudits,\n  },\n  { field: 'status', header: 'Status', sortable: true },\n  { field: 'urls', header: 'Urls', start: true },\n]\nconst selectedColumns = ref(columns.filter((col) => col.start))\n\nconst isFilterActive = (filterField: string) =>\n  selectedColumns.value.some(({ field }) => field === filterField)\n\nconst { isAdmin, isAuditor } = useUser()\n\nconst confirmAuditRemoval = (id: number) => {\n  confirm.require({\n    message: 'Do you want to delete this audit?',\n    header: 'Delete Confirmation',\n    icon: 'pi pi-info-circle',\n    acceptClass: 'p-button-danger !pr-6',\n    accept: () => {\n      emit('delete-audit', id)\n    },\n  })\n}\n\nconst hasAxeResponseErrors = (axeResponse: Axe[]) =>\n  axeResponse.some((result) => result?.errors?.length)\n\nconst has15MinutesPassed = (auditCreationDate: string) => {\n  return hasTimeElapsedInMinutes(auditCreationDate, 15)\n}\n\nconst isWaitingForResults = (auditData: ExtendedAudit) =>\n  !auditData.axe.length && !has15MinutesPassed(auditData.created_at)\n\nconst openDialog = (auditData: ExtendedAudit) => {\n  dialogHeader.value = `Audit ${auditData.id} - errors during automatic test processing`\n  axeErrorMessage.value =\n    auditData.axe?.find(({ errors }) => errors)?.errors[0]?.message ||\n    'Something went wrong, test malformed.'\n  isDialogVisible.value = true\n}\n\nconst clearDialog = () => {\n  dialogHeader.value = ''\n  axeErrorMessage.value = ''\n}\n\nwatch([selectedProject, selectedAuditor, selectedColumns], (newValues) => {\n  let query = {}\n\n  if (\n    newValues[2].some(({ field }) => field === 'project') &&\n    newValues[0]?.id\n  ) {\n    query = { ...query, projectId: newValues[0].id }\n  }\n\n  if (\n    newValues[2].some(({ field }) => field === 'auditor') &&\n    newValues[1]?.id === user.value.id\n  ) {\n    query = { ...query, user: 'me' }\n  }\n\n  router.replace({\n    query,\n  })\n})\n</script>\n\n<template>\n  <TreeTable\n    :auto-layout=\"true\"\n    size=\"small\"\n    show-gridlines\n    :value=\"nodes\"\n    :filters=\"filters\"\n  >\n    <template #header>\n      <div class=\"flex flex-wrap items-center justify-between gap-2\">\n        <div class=\"flex w-full items-center lg:w-2/4\">\n          <label\n            class=\"mr-2 shrink\"\n            for=\"select-columns\"\n          >\n            Select columns\n          </label>\n          <MultiSelect\n            v-model=\"selectedColumns\"\n            input-id=\"select-columns\"\n            :options=\"columns\"\n            option-label=\"header\"\n            class=\"w-full overflow-auto lg:w-auto\"\n            display=\"chip\"\n            placeholder=\"Select Columns\"\n          />\n        </div>\n\n        <div class=\"p-input-icon-left w-full lg:w-1/4\">\n          <i class=\"pi pi-search\" />\n          <InputText\n            v-model=\"filters.global\"\n            placeholder=\"Global Search\"\n            class=\"w-full\"\n          />\n        </div>\n      </div>\n\n      <div class=\"mt-3 flex flex-col gap-3 lg:flex-row\">\n        <div\n          v-if=\"isFilterActive('project')\"\n          class=\"flex w-full items-center\"\n        >\n          <label\n            class=\"mr-2 shrink-0\"\n            for=\"filter-projects\"\n          >\n            Filter by projects\n          </label>\n          <Dropdown\n            v-model=\"selectedProject\"\n            input-id=\"filter-projects\"\n            aria-label=\"Filter by project\"\n            :options=\"projectFilterOptions\"\n            option-label=\"name\"\n            placeholder=\"Filter by project\"\n            class=\"w-full\"\n            data-testid=\"audits-project-filter-select\"\n          />\n        </div>\n        <div\n          v-if=\"isFilterActive('auditor')\"\n          class=\"flex w-full items-center\"\n        >\n          <label\n            class=\"mr-2 shrink-0\"\n            for=\"filter-auditor\"\n          >\n            Filter by auditor\n          </label>\n          <Dropdown\n            id=\"auditor-filter\"\n            v-model=\"selectedAuditor\"\n            aria-label=\"Filter by auditor\"\n            :options=\"uniqueAuditorFilterOptions\"\n            option-label=\"name\"\n            placeholder=\"Filter by auditor\"\n            class=\"w-full\"\n            data-testid=\"audits-auditor-filter-select\"\n          />\n        </div>\n\n        <div\n          v-if=\"isFilterActive('status')\"\n          class=\"flex w-full items-center\"\n        >\n          <label\n            class=\"mr-2 shrink-0\"\n            for=\"filter-status\"\n          >\n            Filter by status\n          </label>\n          <Dropdown\n            id=\"status-filter\"\n            v-model=\"selectedStatus\"\n            aria-label=\"Filter by status\"\n            :options=\"statusOptions\"\n            option-label=\"name\"\n            placeholder=\"Filter by status\"\n            class=\"w-full\"\n            data-testid=\"audits-status-filter-select\"\n          />\n        </div>\n      </div>\n    </template>\n    <Column header=\"Created : Id\">\n      <template #body=\"{ node }\">\n        {{ new Date(node.data.created_at).toLocaleDateString('pl-PL') }} :\n        {{ node.data.id }}\n      </template>\n    </Column>\n\n    <Column\n      v-for=\"col of selectedColumns\"\n      :key=\"col.field\"\n      :field=\"col.field\"\n      :header=\"col.header\"\n      :sortable=\"col.sortable\"\n    >\n      <template\n        v-if=\"col.field === 'urls'\"\n        #body=\"scope\"\n      >\n        <ul>\n          <li\n            v-for=\"(page, pageIndex) in scope.node.data.config.pages\"\n            :key=\"`page-${scope.node.data.id}-${pageIndex}`\"\n          >\n            <a :href=\"page.url\">\n              {{ page.url }}\n            </a>\n          </li>\n        </ul>\n      </template>\n    </Column>\n\n    <Column header=\"Action\">\n      <template #body=\"scope\">\n        <div\n          class=\"grid min-w-[386px] gap-2\"\n          :class=\"{\n            'grid-cols-3': !isWaitingForResults(scope.node.data),\n            'grid-cols-1': isWaitingForResults(scope.node.data),\n          }\"\n        >\n          <span\n            v-if=\"isWaitingForResults(scope.node.data)\"\n            class=\"flex items-center px-4\"\n          >\n            <i\n              class=\"pi pi-spin pi-cog mr-4\"\n              aria-hidden=\"true\"\n            />\n            Tests in progress\n          </span>\n          <template v-else>\n            <NuxtLink\n              v-if=\"scope.node.data.status === 'completed'\"\n              class=\"p-button p-button-info justify-center\"\n              :to=\"`/audit/report/${scope.node.data.id}?type=${scope.node.data.report_type}`\"\n            >\n              View report\n            </NuxtLink>\n\n            <NuxtLink\n              v-else-if=\"\n                scope.node.data.axe.length &&\n                !hasAxeResponseErrors(scope.node.data.axe)\n              \"\n              class=\"p-button p-button-info justify-center\"\n              :to=\"`/audit/${scope.node.data.id}?resultId=${scope.node.data.axe[0].id}`\"\n            >\n              View results\n            </NuxtLink>\n\n            <Button\n              v-else-if=\"\n                hasAxeResponseErrors(scope.node.data.axe) ||\n                (!scope.node.data.axe.length &&\n                  has15MinutesPassed(scope.node.data.created_at))\n              \"\n              severity=\"danger\"\n              label=\"View errors\"\n              @click=\"openDialog(scope.node.data)\"\n            />\n\n            <NuxtLink\n              :to=\"`/audit/new?baseAuditId=${scope.node.data.id}`\"\n              class=\"p-button p-button-info p-button-outlined justify-center\"\n            >\n              Repeat\n            </NuxtLink>\n            <Button\n              v-if=\"\n                isAdmin || (isAuditor && scope.node.data.status === 'draft')\n              \"\n              severity=\"danger\"\n              outlined\n              class=\"justify-center\"\n              @click=\"confirmAuditRemoval(scope.node.data.id)\"\n            >\n              Remove\n            </Button>\n          </template>\n        </div>\n      </template>\n    </Column>\n    <template #empty>\n      <div class=\"p-2 text-center\">The list is empty</div>\n    </template>\n  </TreeTable>\n\n  <LazyAuditErrorsDialog\n    v-if=\"dialogHeader && axeErrorMessage\"\n    v-model:visible=\"isDialogVisible\"\n    :header=\"dialogHeader\"\n    :error-message=\"axeErrorMessage\"\n    @hide=\"clearDialog\"\n  />\n</template>\n","<script setup lang=\"ts\">\nimport { useToast } from 'primevue/usetoast'\nimport type { Database } from 'types/supabase'\nimport type { ExtendedAudit, Project } from 'types/database'\nimport type { AuditMapValue } from 'types/audit'\nimport { oneMinuteInMilliseconds, hasTimeElapsedInMinutes } from 'utils/time'\n\nconst { isAdmin, isAuditor } = useUser()\nconst route = useRoute()\nconst supabase = useSupabaseClient()\nconst toast = useToast()\n\nconst audits = ref<ExtendedAudit[]>([])\nconst projects = ref<Project[]>([])\nconst isLoading = ref(true)\nconst projectId = ref(Number(route.query.projectId))\nconst showUserAudits = ref(route.query.user === 'me')\nconst notTestedAuditMap = ref(new Map<number, AuditMapValue>())\n\nconst areAllAuditsFinished = computed(() =>\n  audits.value.every((audit) => hasTimeElapsedInMinutes(audit.created_at, 15))\n)\n\nconst axeTableInsertChannel = supabase\n  .channel('axe')\n  .on(\n    'postgres_changes',\n    { event: 'INSERT', schema: 'public', table: 'axe' },\n    async (payload) => {\n      const auditId = payload.new.audit_id\n      const item = notTestedAuditMap.value.get(auditId)\n\n      if (!item || item.didAutomaticTestsFail) {\n        return\n      }\n\n      if (payload.new.errors?.length) {\n        item.didAutomaticTestsFail = true\n        notTestedAuditMap.value.set(auditId, item)\n        await fetchAudits()\n        return\n      }\n\n      item.automaticTestsCount += 1\n      notTestedAuditMap.value.set(auditId, item)\n\n      if (item.automaticTestsCount === item.totalNumberOfAllTests) {\n        await fetchAudits()\n        toast.add({\n          severity: 'info',\n          summary: `The audit list has been updated`,\n          life: 3000,\n        })\n      }\n    }\n  )\n  .subscribe()\n\nasync function fetchAudits() {\n  const { data } = await supabase\n    .from('audits')\n    .select(\n      '*, projects(name), profiles(username, full_name), axe (id, errors)'\n    )\n    .order('created_at', { ascending: false })\n\n  // @todo: fix possibly infinite issue for issues `Json` type\n  // @note: temporary disabled - types are generated by supabase\n  audits.value = data || []\n  // @ts-ignore: possibly infinite issue\n  audits.value\n    .filter((audit: ExtendedAudit) => !audit.axe.length)\n    .forEach(({ id, config }) => {\n      notTestedAuditMap.value.set(id, {\n        totalNumberOfAllTests: config.pages.length * config.viewports.length,\n        automaticTestsCount: 0,\n        didAutomaticTestsFail: false,\n      })\n    })\n}\n\nasync function fetchProjects() {\n  const supabase = useSupabaseClient<Database>()\n\n  try {\n    const { data } = await supabase\n      .from('projects')\n      .select('*')\n      .order('name', { ascending: true })\n    projects.value = data || []\n  } catch (error) {\n    console.error('Error fetching projects:', error)\n  }\n}\n\nconst deleteAudit = async (auditId: number) => {\n  const { error } = await supabase.from('audits').delete().eq('id', auditId)\n  if (!error) {\n    audits.value = audits.value.filter(({ id }) => id !== auditId)\n\n    toast.add({\n      severity: 'success',\n      summary: `Audit #${auditId} deleted`,\n      life: 3000,\n    })\n  }\n}\n\nasync function fetchData() {\n  try {\n    await Promise.all([fetchAudits(), fetchProjects()])\n  } catch (error) {\n    console.error('Error fetching data:', error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\nconst timeout = setTimeout(async () => {\n  await fetchData()\n}, 15 * oneMinuteInMilliseconds)\n\nif (areAllAuditsFinished.value) {\n  clearTimeout(timeout)\n}\n\nonMounted(async () => {\n  await fetchData()\n})\n\nonUnmounted(() => {\n  supabase.removeChannel(axeTableInsertChannel)\n})\n</script>\n\n<template>\n  <div class=\"grid\">\n    <div class=\"flex justify-between\">\n      <h1>Audit list</h1>\n\n      <NuxtLink\n        v-if=\"isAdmin || isAuditor\"\n        to=\"/audit/new\"\n        class=\"p-button-link\"\n      >\n        Add new audit\n      </NuxtLink>\n    </div>\n\n    <div class=\"grid\">\n      <Card\n        :pt=\"{\n          content: {\n            class: 'flex flex-col',\n          },\n        }\"\n        class=\"mb-6 overflow-auto\"\n      >\n        <template #content>\n          <Spinner\n            v-if=\"isLoading\"\n            class=\"mx-auto w-20\"\n          />\n          <AuditTable\n            v-else-if=\"audits.length\"\n            :audits=\"audits\"\n            :projects=\"projects\"\n            :project-id=\"projectId\"\n            :show-user-audits=\"showUserAudits\"\n            @delete-audit=\"deleteAudit\"\n          />\n          <p v-else>Your audit list is empty</p>\n        </template>\n      </Card>\n    </div>\n  </div>\n</template>\n"],"names":["supabase"],"mappings":"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"}