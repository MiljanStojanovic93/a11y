{"version":3,"file":"index-b597ee47.js","sources":["../../../../utils/get-audit-link.ts","../../../../components/AuditList.vue","../../../../components/ProjectList.vue","../../../../pages/index.vue"],"sourcesContent":["import type { Audit, Axe } from 'types/database'\n\nexport const getAuditLink = ({\n  id,\n  axeId,\n  status,\n  reportType,\n}: {\n  id: Audit['id']\n  axeId: Axe['id']\n  status: Audit['status']\n  reportType: Audit['report_type']\n}) => {\n  if (status === 'completed') {\n    return `/audit/report/${id}?type=${reportType}`\n  }\n  return `/audit/${id}?resultId=${axeId}`\n}\n","<script setup lang=\"ts\">\nimport type { ExtendedAudit } from 'types/database'\nimport { getAuditLink } from '~/utils/get-audit-link'\n\nconst props = withDefaults(\n  defineProps<{\n    audits: ExtendedAudit[]\n    initialCount?: number\n    isLoading?: boolean\n  }>(),\n  {\n    initialCount: 0,\n    isLoading: false,\n  }\n)\n\nconst count = ref(props.initialCount ? props.initialCount : props.audits.length)\nconst visibleAudits = computed(() => props.audits.slice(0, count.value))\n</script>\n\n<template>\n  <Card>\n    <template #title>\n      <h2 id=\"audits-card-title\">Your recent audits</h2>\n    </template>\n    <template #content>\n      <Spinner\n        v-if=\"isLoading\"\n        class=\"mx-auto w-20\"\n      />\n      <ul\n        v-else-if=\"audits.length\"\n        aria-labelledby=\"audits-card-title\"\n      >\n        <li\n          v-for=\"{ id, config, axe, status, report_type } in visibleAudits\"\n          :key=\"id\"\n        >\n          <NuxtLink\n            v-if=\"status === 'completed' || axe?.length\"\n            class=\"p-button p-button-text w-full justify-between\"\n            :to=\"\n              getAuditLink({\n                id,\n                axeId: axe[0].id,\n                status,\n                reportType: report_type,\n              })\n            \"\n          >\n            <span class=\"text-left\">{{ config.title }}</span>\n            <span\n              class=\"p-button p-button-info ml-4 min-w-[116px] justify-center\"\n            >\n              <template v-if=\"status === 'completed'\">See report</template>\n              <template v-else>See results</template>\n            </span>\n          </NuxtLink>\n          <div\n            v-else\n            class=\"border border-transparent px-4 py-3.5 text-left leading-normal\"\n          >\n            {{ config.title }}\n          </div>\n        </li>\n      </ul>\n      <p v-else>Your audit list is empty</p>\n    </template>\n    <template\n      v-if=\"audits.length\"\n      #footer\n    >\n      <NuxtLink\n        class=\"p-button\"\n        to=\"/audit/?user=me\"\n      >\n        See all my audits\n      </NuxtLink>\n    </template>\n  </Card>\n</template>\n","<script setup lang=\"ts\">\nimport type { Project } from 'types/database'\n\nconst props = withDefaults(\n  defineProps<{\n    projects: Project[]\n    initialCount?: number\n    step?: number\n    isLoading?: boolean\n  }>(),\n  {\n    initialCount: 0,\n    step: 5,\n    isLoading: false,\n  }\n)\n\nconst count = ref(\n  props.initialCount ? props.initialCount : props.projects.length\n)\nconst showMore = () => {\n  count.value = count.value + props.step\n}\n\nconst visibleProjects = computed(() => props.projects.slice(0, count.value))\n\nconst isShowMoreButtonAvailable = computed(\n  () =>\n    props.projects.length > 0 &&\n    props.initialCount &&\n    count.value < props.projects.length\n)\n</script>\n\n<template>\n  <Card>\n    <template #title>\n      <h2 id=\"project-card-title\">Your projects</h2>\n    </template>\n    <template #content>\n      <Spinner\n        v-if=\"isLoading\"\n        class=\"mx-auto w-20\"\n      />\n      <ul\n        v-else-if=\"visibleProjects.length\"\n        aria-labelledby=\"project-card-title\"\n        class=\"grid space-y-2\"\n      >\n        <li\n          v-for=\"{ id, name } in visibleProjects\"\n          :key=\"id\"\n        >\n          <NuxtLink\n            class=\"p-button p-button-link grid w-full justify-between\"\n            :to=\"`/audit/?projectId=${id}`\"\n          >\n            <span class=\"text-left\">{{ name }}</span>\n            <span class=\"p-button p-button-info ml-4\">See all audits</span>\n          </NuxtLink>\n        </li>\n      </ul>\n      <p v-else>Your projects list is empty</p>\n    </template>\n    <template\n      v-if=\"isShowMoreButtonAvailable\"\n      #footer\n    >\n      <Button @click=\"showMore\">Show more projects</Button>\n    </template>\n  </Card>\n</template>\n","<script setup lang=\"ts\">\nimport type { ExtendedAudit, Project } from 'types/database'\nimport type { Database } from 'types/supabase'\n\nconst { user, isViewer } = useUser()\nconst projects = ref<Project[]>([])\nconst audits = ref<ExtendedAudit[]>([])\nconst isLoading = ref(true)\n\nasync function fetchProjects() {\n  const supabase = useSupabaseClient<Database>()\n\n  try {\n    const { data } = await supabase\n      .from('projects')\n      .select('*', { count: 'exact' })\n      .order('created_at', { ascending: true })\n    projects.value = data || []\n  } catch (error) {\n    console.error('Error fetching projects:', error)\n  }\n}\n\nasync function fetchAudits() {\n  const supabase = useSupabaseClient<Database>()\n\n  const { data } = await supabase\n    .from('audits')\n    .select('*, axe (id)')\n    .order('created_at', { ascending: false })\n    .eq('profile_id', user.value.id)\n\n  // @todo: fix possibly infinite issue for issues `Json` type\n  // @note: temporary disabled - types are generated by supabase\n  // @ts-ignore: possibly infinite issue\n  audits.value = data || []\n}\n\nasync function fetchData() {\n  try {\n    await Promise.all([fetchAudits(), fetchProjects()])\n  } catch (error) {\n    console.error('Error fetching data:', error)\n  } finally {\n    isLoading.value = false\n  }\n}\n\nonMounted(async () => await fetchData())\n</script>\n\n<template>\n  <div class=\"grid grid-cols-1 space-y-8\">\n    <div\n      class=\"flex flex-wrap justify-between space-y-6 sm:flex-nowrap sm:space-y-0\"\n    >\n      <h1>Your a11y tools</h1>\n\n      <NuxtLink\n        class=\"p-button p-button-lg w-full justify-center sm:w-2/5\"\n        to=\"/audit/new\"\n      >\n        Create new audit\n      </NuxtLink>\n    </div>\n    <div\n      class=\"grid gap-4\"\n      :class=\"{\n        'md:w-3/5 md:grid-cols-1': isViewer,\n        'md:grid-cols-2': !isViewer,\n      }\"\n    >\n      <AuditList\n        v-if=\"!isViewer\"\n        :audits=\"audits\"\n        :initial-count=\"5\"\n        :is-loading=\"isLoading\"\n      />\n\n      <ProjectList\n        :projects=\"projects\"\n        :initial-count=\"5\"\n        :is-loading=\"isLoading\"\n      />\n    </div>\n  </div>\n</template>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAEO,MAAM,eAAe,CAAC;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAKM;AACJ,MAAI,WAAW,aAAa;AACnB,WAAA,iBAAiB,EAAE,SAAS,UAAU;AAAA,EAC/C;AACO,SAAA,UAAU,EAAE,aAAa,KAAK;AACvC;;;;;;;;;;ACbA,UAAM,QAAQ;AAYR,UAAA,QAAQ,IAAI,MAAM,eAAe,MAAM,eAAe,MAAM,OAAO,MAAM;AACzE,UAAA,gBAAgB,SAAS,MAAM,MAAM,OAAO,MAAM,GAAG,MAAM,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdvE,UAAM,QAAQ;AAcd,UAAM,QAAQ;AAAA,MACZ,MAAM,eAAe,MAAM,eAAe,MAAM,SAAS;AAAA,IAAA;AAE3D,UAAM,WAAW,MAAM;AACf,YAAA,QAAQ,MAAM,QAAQ,MAAM;AAAA,IAAA;AAG9B,UAAA,kBAAkB,SAAS,MAAM,MAAM,SAAS,MAAM,GAAG,MAAM,KAAK,CAAC;AAE3E,UAAM,4BAA4B;AAAA,MAChC,MACE,MAAM,SAAS,SAAS,KACxB,MAAM,gBACN,MAAM,QAAQ,MAAM,SAAS;AAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BjC,UAAM,EAAE,MAAM,SAAS,IAAI,QAAQ;AAC7B,UAAA,WAAW,IAAe,CAAA,CAAE;AAC5B,UAAA,SAAS,IAAqB,CAAA,CAAE;AAChC,UAAA,YAAY,IAAI,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}