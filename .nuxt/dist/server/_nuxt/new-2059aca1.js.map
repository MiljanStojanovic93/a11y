{"version":3,"file":"new-2059aca1.js","sources":["../../../../components/AuditForm.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { useForm, useFieldArray } from 'vee-validate'\nimport { toTypedSchema } from '@vee-validate/yup'\nimport { useToast } from 'primevue/usetoast'\nimport type { InvalidSubmissionContext } from 'vee-validate'\nimport type { Database } from 'types/supabase'\nimport type { Project } from 'types/database'\n\nimport type { Page, AuditConfiguration } from 'types/audit'\nimport { auditFormSchema } from 'validation/schema'\nimport { displayFirstError } from '~/utils/form'\nimport { isSupabaseError, SupabaseError } from '~/plugins/error'\nimport { availableScreenSizes } from '~/data/screenSizes'\n\nconst {\n  useFieldModel,\n  handleSubmit,\n  errors,\n  submitCount,\n  resetForm,\n  setValues,\n} = useForm({ validationSchema: toTypedSchema(auditFormSchema) })\nconst { isSubmitted } = useValidation(submitCount)\n\nconst {\n  fields: pages,\n  push: pushPage,\n  remove: removePage,\n} = useFieldArray<Page>('pages')\nconst title = useFieldModel('title')\nconst project = useFieldModel('project')\nconst username = useFieldModel('username')\nconst password = useFieldModel('password')\nconst viewports = useFieldModel('viewports')\nconst noAxe = useFieldModel('noAxe')\nconst description = useFieldModel('description')\n\nconst toast = useToast()\nconst supabase = useSupabaseClient<Database>()\nconst route = useRoute()\nconst router = useRouter()\nconst baseAuditId = route.query.baseAuditId\n\nif (baseAuditId) {\n  const { data: baseAudit, error } = await supabase\n    .from('audits')\n    .select('*, projects(id)')\n    .eq('id', baseAuditId)\n    .single()\n\n  if (error) {\n    const errorWithUpdatedMessage = {\n      ...error,\n      message: `Failed to copy configuration from audit #${baseAuditId}. ${error.message}`,\n    }\n\n    const { $handleError } = useNuxtApp()\n    $handleError(errorWithUpdatedMessage as Error | SupabaseError)\n  } else {\n    setValues({\n      pages: baseAudit.config.noAxe\n        ? [{ selector: '', url: '' }]\n        : baseAudit.config.pages,\n      title: baseAudit.config.title,\n      project: baseAudit.projects?.id,\n      username: baseAudit.config.basicAuth.username,\n      password: baseAudit.config.basicAuth.password,\n      viewports: baseAudit.config.viewports,\n      noAxe: baseAudit.config.noAxe,\n      description: baseAudit.config.description,\n    })\n\n    router.replace({ query: {} })\n  }\n}\n\nconst user = useSupabaseUser()\nconst projects = ref<Project[]>([])\nconst userProjectIds = ref<number[]>([])\nconst { isAdmin } = useUser()\n\nconst isAllowedToAddAuditToSelectedProject = computed<boolean>(\n  () =>\n    project.value &&\n    (isAdmin.value || userProjectIds.value.includes(project.value))\n)\n\nif (user.value) {\n  const { data: projectsData } = await supabase.from('projects').select('*')\n  projects.value = projectsData || []\n  const { data: profileProjectData } = await supabase\n    .from('profile_project')\n    .select('project_id')\n    .eq('profile_id', user.value.id)\n  userProjectIds.value =\n    profileProjectData?.map((item) => item.project_id) || []\n}\n\nconst isLoading = ref(false)\nconst isAuditProcessingDialogVisible = ref(false)\nconst newAuditId = ref<number>()\nconst selectedProjectName = computed(\n  () =>\n    projects.value.find((item) => item.id === project.value)?.name ||\n    'this project'\n)\n\nconst onInvalidSubmit = ({ errors }: InvalidSubmissionContext) =>\n  displayFirstError(errors)\n\nconst sendForm = handleSubmit(async (values) => {\n  try {\n    isLoading.value = true\n\n    let config: AuditConfiguration = {\n      basicAuth: {\n        password: '',\n        username: '',\n      },\n      pages: [],\n      title: values.title,\n      viewports: values.viewports.map((viewport) =>\n        viewport ? viewport.filter(Boolean) : []\n      ),\n      noAxe: values.noAxe,\n      description: values.description || '',\n    }\n\n    if (!values.noAxe) {\n      config = {\n        ...config,\n        basicAuth: {\n          password: values.password || '',\n          username: values.username || '',\n        },\n        pages: values.pages || [],\n      }\n    }\n\n    const { data: newAudit, error } = await supabase\n      .from('audits')\n      .insert({\n        project_id: values.project,\n        profile_id: user.value.id,\n        status: 'draft',\n        config,\n      })\n      .select()\n      .single()\n\n    if (error) {\n      if (isSupabaseError(error)) {\n        throw new SupabaseError(error)\n      }\n\n      throw new Error(error?.message || '')\n    }\n\n    if (noAxe.value) {\n      values.viewports.forEach(async (viewport) => {\n        const { error } = await supabase\n          .from('axe')\n          .insert({\n            audit_id: newAudit.id,\n            size: viewport?.toString(),\n          })\n          .select()\n          .single()\n\n        if (error) {\n          throw isSupabaseError(error)\n            ? new SupabaseError(error)\n            : new Error(error?.message || '')\n        }\n      })\n\n      navigateTo(`/audit/${newAudit.id}`)\n    } else {\n      const { error: apiTestError } = await useFetch('/api/test', {\n        method: 'POST',\n        body: newAudit,\n      })\n\n      if (apiTestError.value) {\n        toast.add({\n          severity: 'error',\n          summary: apiTestError.value?.message,\n          life: 3000,\n        })\n      } else {\n        newAuditId.value = newAudit.id\n        isAuditProcessingDialogVisible.value = true\n      }\n    }\n  } catch (error) {\n    const { $handleError } = useNuxtApp()\n\n    $handleError(error as Error | SupabaseError)\n  } finally {\n    isLoading.value = false\n  }\n}, onInvalidSubmit)\n\nconst onAuditProcessingDialogClose = (resetAuditForm: boolean = true) => {\n  isAuditProcessingDialogVisible.value = false\n  newAuditId.value = undefined\n  isLoading.value = false\n  resetAuditForm && resetForm()\n}\n</script>\n\n<template>\n  <section>\n    <h2 class=\"mb-4\">Configuration</h2>\n    <form @submit=\"sendForm\">\n      <div class=\"mb-4 grid grid-cols-[48px_1fr] items-center gap-3\">\n        <InputSwitch\n          id=\"no-axe\"\n          v-model=\"noAxe\"\n          data-testid=\"audit-no-axe-field\"\n        />\n        <label\n          for=\"no-axe\"\n          class=\"cursor-pointer\"\n          @click=\"noAxe = !noAxe\"\n        >\n          Skip Axe automatic tests. I only want to test manually.\n        </label>\n      </div>\n      <Accordion\n        :active-index=\"[0, 1]\"\n        :multiple=\"true\"\n      >\n        <AccordionTab\n          v-if=\"!noAxe\"\n          header=\"Pages\"\n        >\n          <div\n            v-for=\"(page, index) in pages\"\n            :key=\"`page-${index}`\"\n            class=\"mb-4 grid gap-6 border-b border-b-gray-300 pb-4\"\n          >\n            <div class=\"grid gap-6 md:grid-cols-2 md:items-start md:gap-x-8\">\n              <div class=\"w-full\">\n                <label :for=\"`url-${index}`\">Url</label>\n                <InputText\n                  :id=\"`url-${index}`\"\n                  v-model=\"page.value.url\"\n                  class=\"w-full\"\n                  :data-testid=\"`audit-page-url-field-${index}`\"\n                  :name=\"`pages[${index}].url`\"\n                  :class=\"[\n                    {\n                      'p-invalid':\n                        (errors[`pages[${index}].url` as `pages.${number}.url`] ||\n                          errors[`pages[${index}]` as `pages.${number}`]) &&\n                        isSubmitted,\n                    },\n                  ]\"\n                />\n                <small\n                  v-if=\"errors[`pages[${index}].url` as `pages.${number}.url`] && isSubmitted\"\n                  class=\"p-error mt-1\"\n                >\n                  {{ errors[`pages[${index}].url` as `pages.${number}.url`] }}\n                </small>\n              </div>\n\n              <div class=\"w-full\">\n                <label :for=\"`selector-${index}`\">HTML Selector</label>\n                <InputText\n                  :id=\"`selector-${index}`\"\n                  v-model=\"page.value.selector\"\n                  :name=\"`pages[${index}].selector`\"\n                  class=\"w-full\"\n                  :aria-describedby=\"`selector-help-${index}`\"\n                  :data-testid=\"`audit-page-selector-field-${index}`\"\n                  :class=\"[\n                    {\n                      'p-invalid':\n                        (errors[`pages[${index}].selector` as `pages.${number}.selector`] ||\n                          errors[`pages[${index}]` as `pages.${number}`]) &&\n                        isSubmitted,\n                    },\n                  ]\"\n                />\n                <small :id=\"`selector-help-${index}`\">\n                  Use .class or #id to choose selector to test, just one\n                  selector allowed. If empty whole document will be tested.\n                </small>\n              </div>\n              <small\n                v-if=\"errors[`pages[${index}]` as `pages.${number}`] && isSubmitted\"\n                class=\"p-error w-full\"\n              >\n                {{ errors[`pages[${index}]` as `pages.${number}`] }}\n              </small>\n            </div>\n\n            <Button\n              v-if=\"index !== 0\"\n              label=\"Remove page\"\n              variant=\"secondary\"\n              class=\"tracking-wider md:justify-self-start\"\n              icon=\"pi pi-times\"\n              :data-testid=\"`audit-remove-page-button-${index}`\"\n              outlined\n              :pt=\"{\n                icon: { 'aria-hidden': true },\n              }\"\n              @click=\"removePage(index)\"\n            />\n          </div>\n\n          <Button\n            label=\"Add page\"\n            class=\"w-full tracking-wider md:w-auto\"\n            icon=\"pi pi-plus\"\n            outlined\n            data-testid=\"audit-add-page-button\"\n            :pt=\"{\n              icon: { 'aria-hidden': true },\n            }\"\n            @click=\"pushPage({ url: '', selector: '' })\"\n          />\n        </AccordionTab>\n        <AccordionTab header=\"General\">\n          <div class=\"grid gap-6 md:grid-cols-2 md:gap-x-8 md:gap-y-4\">\n            <div class=\"w-full\">\n              <label for=\"title\">Title</label>\n              <InputText\n                id=\"title\"\n                v-model=\"title\"\n                class=\"w-full\"\n                data-testid=\"audit-title-field\"\n                name=\"title\"\n                :class=\"[{ 'p-invalid': errors.title && isSubmitted }]\"\n              />\n              <small\n                v-if=\"errors.title && isSubmitted\"\n                class=\"p-error mt-1\"\n              >\n                {{ errors.title }}\n              </small>\n            </div>\n\n            <div class=\"w-full\">\n              <label\n                id=\"project-label\"\n                for=\"project\"\n              >\n                Project\n              </label>\n              <Dropdown\n                id=\"project\"\n                v-model=\"project\"\n                :options=\"projects\"\n                option-label=\"name\"\n                option-value=\"id\"\n                placeholder=\"Select\"\n                class=\"md:w-14rem w-full\"\n                data-testid=\"audit-project-field\"\n                name=\"project\"\n                :class=\"[{ 'p-invalid': errors.project && isSubmitted }]\"\n                aria-labelledby=\"project-label\"\n              />\n              <small\n                v-if=\"errors.project && isSubmitted\"\n                class=\"p-error mt-1\"\n              >\n                {{ errors.project }}\n              </small>\n            </div>\n            <div class=\"col-span-2\">\n              <label for=\"description\">Description</label>\n              <Textarea\n                id=\"description\"\n                v-model=\"description\"\n                name=\"description\"\n                class=\"w-full\"\n                rows=\"5\"\n                :aria-describedby=\"noAxe ? 'description-help' : undefined\"\n              />\n              <small\n                v-if=\"noAxe\"\n                id=\"description-help\"\n                class=\"block\"\n              >\n                In case the audit only includes manual tests, be sure to\n                disclose exactly what you'll be testing.\n              </small>\n              <small\n                v-if=\"errors.description && isSubmitted\"\n                class=\"p-error mt-1\"\n              >\n                {{ errors.description }}\n              </small>\n            </div>\n          </div>\n        </AccordionTab>\n        <AccordionTab\n          :header=\"noAxe ? 'Screen sizes / Devices' : 'Axe configuration'\"\n        >\n          <div :class=\"{ 'grid gap-6 md:grid-rows-2 md:gap-4': !noAxe }\">\n            <div class=\"grid\">\n              <label\n                id=\"viewports\"\n                :class=\"{ 'sr-only': noAxe }\"\n              >\n                Screen sizes / Devices\n              </label>\n              <MultiSelect\n                v-model=\"viewports\"\n                aria-labelledby=\"viewports\"\n                :options=\"availableScreenSizes\"\n                option-label=\"name\"\n                option-value=\"viewport\"\n                placeholder=\"Select screen sizes\"\n                :max-selected-labels=\"3\"\n                name=\"viewports\"\n                :class=\"[{ 'p-invalid': errors.viewports && isSubmitted }]\"\n              >\n                <template #option=\"slotProps\">\n                  <div class=\"align-items-center flex\">\n                    <div>\n                      {{ slotProps.option.name }} [{{\n                        slotProps.option.viewport.join(' x ')\n                      }}]\n                    </div>\n                  </div>\n                </template>\n              </MultiSelect>\n            </div>\n\n            <div\n              v-if=\"!noAxe\"\n              class=\"grid w-full gap-6 gap-x-8 md:grid-cols-2\"\n            >\n              <div class=\"w-full\">\n                <label for=\"username\">Basic Auth username</label>\n                <InputText\n                  id=\"username\"\n                  v-model=\"username\"\n                  class=\"w-full\"\n                  data-testid=\"audit-auth-username-field\"\n                  name=\"username\"\n                />\n              </div>\n\n              <div class=\"w-full\">\n                <label for=\"password\">Basic Auth password</label>\n                <Password\n                  id=\"password\"\n                  v-model=\"password\"\n                  class=\"w-full\"\n                  input-class=\"w-full\"\n                  data-testid=\"audit-auth-password-field\"\n                  name=\"password\"\n                  :feedback=\"false\"\n                  toggle-mask\n                  :pt=\"{\n                    input: {\n                      autocomplete: 'off',\n                    },\n                  }\"\n                />\n              </div>\n            </div>\n          </div>\n        </AccordionTab>\n      </Accordion>\n\n      <div aria-live=\"assertive\">\n        <small\n          v-if=\"project && !isAllowedToAddAuditToSelectedProject\"\n          class=\"mb-4 mt-3 block text-red-700\"\n        >\n          You don't have permission to add an audit to the\n          {{ selectedProjectName }}. To gain access please contact the\n          administrator.\n        </small>\n      </div>\n      <Button\n        :label=\"isLoading ? 'Sending...' : 'Send'\"\n        type=\"submit\"\n        class=\"p-button-lg w-full\"\n        data-testid=\"audit-submit-button\"\n        :loading=\"isLoading\"\n        :disabled=\"isLoading || !isAllowedToAddAuditToSelectedProject\"\n      />\n    </form>\n    <LazyAuditProcessingDialog\n      v-if=\"newAuditId\"\n      v-model:visible=\"isAuditProcessingDialogVisible\"\n      :audit-id=\"newAuditId\"\n      @close=\"\n        (options) => onAuditProcessingDialogClose(options?.resetAuditForm)\n      \"\n      @hide=\"onAuditProcessingDialogClose\"\n    />\n  </section>\n</template>\n"],"names":["_withAsyncContext","_a","errors","error"],"mappings":"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}